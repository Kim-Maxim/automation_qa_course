{"name": "Check changed resizable boxes", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: chrome=119.0.6045.160)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6975682B2+55298]\n\t(No symbol) [0x00007FF6974D5E02]\n\t(No symbol) [0x00007FF69739045D]\n\t(No symbol) [0x00007FF6974131B9]\n\t(No symbol) [0x00007FF6973F20AA]\n\t(No symbol) [0x00007FF69740AAA4]\n\t(No symbol) [0x00007FF6973F1E83]\n\t(No symbol) [0x00007FF6973C670A]\n\t(No symbol) [0x00007FF6973C7964]\n\tGetHandleVerifier [0x00007FF6978E0AAB+3694587]\n\tGetHandleVerifier [0x00007FF69793728E+4048862]\n\tGetHandleVerifier [0x00007FF69792F173+4015811]\n\tGetHandleVerifier [0x00007FF6976047D6+695590]\n\t(No symbol) [0x00007FF6974E0CE8]\n\t(No symbol) [0x00007FF6974DCF34]\n\t(No symbol) [0x00007FF6974DD062]\n\t(No symbol) [0x00007FF6974CD3A3]\n\tBaseThreadInitThunk [0x00007FF89B8B7344+20]\n\tRtlUserThreadStart [0x00007FF89D6226B1+33]", "trace": "self = <interactions_test.TestInteractions.TestResizablePage object at 0x00000204AF373F80>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6ae0a7a6c5502dba5d10cf09f5b82df6\")>\n\n    @pytest.mark.smoke\n    @allure.title('Check changed resizable boxes')\n    def test_resizable(self, driver):\n        resizable_page = ResizablePage(driver, 'https://demoqa.com/resizable')\n        resizable_page.open()\n        max_box, min_box = resizable_page.change_size_resizable_box()\n>       max_resize, min_resize = resizable_page.change_size_resizable()\n\ntests\\interactions_test.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\interactions_page.py:89: in change_size_resizable\n    self.action_drag_and_drop_by_offset(self.element_is_visible(self.locators.RESIZABLE_HANDLE), random.randint(1,300), random.randint(1,300))\npages\\base_page.py:63: in action_drag_and_drop_by_offset\n    action.perform()\nenv\\Lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py:94: in perform\n    self.w3c_actions.perform()\nenv\\Lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\nenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000204AFAF9FA0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"move target out of bounds\\\\n  (Sess...07FF6974CD3A3]\\\\n\\\\tBaseThreadInitThunk [0x00007FF89B8B7344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF89D6226B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\nE         (Session info: chrome=119.0.6045.160)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6975682B2+55298]\nE       \t(No symbol) [0x00007FF6974D5E02]\nE       \t(No symbol) [0x00007FF69739045D]\nE       \t(No symbol) [0x00007FF6974131B9]\nE       \t(No symbol) [0x00007FF6973F20AA]\nE       \t(No symbol) [0x00007FF69740AAA4]\nE       \t(No symbol) [0x00007FF6973F1E83]\nE       \t(No symbol) [0x00007FF6973C670A]\nE       \t(No symbol) [0x00007FF6973C7964]\nE       \tGetHandleVerifier [0x00007FF6978E0AAB+3694587]\nE       \tGetHandleVerifier [0x00007FF69793728E+4048862]\nE       \tGetHandleVerifier [0x00007FF69792F173+4015811]\nE       \tGetHandleVerifier [0x00007FF6976047D6+695590]\nE       \t(No symbol) [0x00007FF6974E0CE8]\nE       \t(No symbol) [0x00007FF6974DCF34]\nE       \t(No symbol) [0x00007FF6974DD062]\nE       \t(No symbol) [0x00007FF6974CD3A3]\nE       \tBaseThreadInitThunk [0x00007FF89B8B7344+20]\nE       \tRtlUserThreadStart [0x00007FF89D6226B1+33]\n\nenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: MoveTargetOutOfBoundsException"}, "steps": [{"name": "Open a browser", "status": "passed", "start": 1700318348717, "stop": 1700318369831}, {"name": "change size resizable box", "status": "passed", "steps": [{"name": "Find a present element", "status": "passed", "parameters": [{"name": "locator", "value": "('css selector', \"div[class='constraint-area'] span[class='react-resizable-handle react-resizable-handle-se']\")"}, {"name": "timeout", "value": "10"}], "start": 1700318369831, "stop": 1700318369840}, {"name": "Drag and drop by offset", "status": "passed", "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"6ae0a7a6c5502dba5d10cf09f5b82df6\", element=\"20A6C522123D698931FF8FC5EC1415F4_element_18\")>"}, {"name": "x_coords", "value": "400"}, {"name": "y_coords", "value": "200"}], "start": 1700318369840, "stop": 1700318370380}, {"name": "get max and min size", "status": "passed", "steps": [{"name": "Find a present element", "status": "passed", "parameters": [{"name": "locator", "value": "('css selector', \"div[id='resizableBoxWithRestriction']\")"}, {"name": "timeout", "value": "10"}], "start": 1700318370380, "stop": 1700318370390}], "parameters": [{"name": "element", "value": "('css selector', \"div[id='resizableBoxWithRestriction']\")"}], "start": 1700318370380, "stop": 1700318370400}, {"name": "get px from width and height", "status": "passed", "parameters": [{"name": "value_of_size", "value": "'width: 500px; height: 300px;'"}], "start": 1700318370400, "stop": 1700318370400}, {"name": "Find a present element", "status": "passed", "parameters": [{"name": "locator", "value": "('css selector', \"div[class='constraint-area'] span[class='react-resizable-handle react-resizable-handle-se']\")"}, {"name": "timeout", "value": "10"}], "start": 1700318370400, "stop": 1700318370406}, {"name": "Drag and drop by offset", "status": "passed", "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"6ae0a7a6c5502dba5d10cf09f5b82df6\", element=\"20A6C522123D698931FF8FC5EC1415F4_element_18\")>"}, {"name": "x_coords", "value": "-400"}, {"name": "y_coords", "value": "-200"}], "start": 1700318370406, "stop": 1700318370956}, {"name": "get max and min size", "status": "passed", "steps": [{"name": "Find a present element", "status": "passed", "parameters": [{"name": "locator", "value": "('css selector', \"div[id='resizableBoxWithRestriction']\")"}, {"name": "timeout", "value": "10"}], "start": 1700318370956, "stop": 1700318370963}], "parameters": [{"name": "element", "value": "('css selector', \"div[id='resizableBoxWithRestriction']\")"}], "start": 1700318370956, "stop": 1700318370974}, {"name": "get px from width and height", "status": "passed", "parameters": [{"name": "value_of_size", "value": "'width: 150px; height: 150px;'"}], "start": 1700318370974, "stop": 1700318370974}], "start": 1700318369831, "stop": 1700318370974}, {"name": "change size resizable", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: chrome=119.0.6045.160)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6975682B2+55298]\n\t(No symbol) [0x00007FF6974D5E02]\n\t(No symbol) [0x00007FF69739045D]\n\t(No symbol) [0x00007FF6974131B9]\n\t(No symbol) [0x00007FF6973F20AA]\n\t(No symbol) [0x00007FF69740AAA4]\n\t(No symbol) [0x00007FF6973F1E83]\n\t(No symbol) [0x00007FF6973C670A]\n\t(No symbol) [0x00007FF6973C7964]\n\tGetHandleVerifier [0x00007FF6978E0AAB+3694587]\n\tGetHandleVerifier [0x00007FF69793728E+4048862]\n\tGetHandleVerifier [0x00007FF69792F173+4015811]\n\tGetHandleVerifier [0x00007FF6976047D6+695590]\n\t(No symbol) [0x00007FF6974E0CE8]\n\t(No symbol) [0x00007FF6974DCF34]\n\t(No symbol) [0x00007FF6974DD062]\n\t(No symbol) [0x00007FF6974CD3A3]\n\tBaseThreadInitThunk [0x00007FF89B8B7344+20]\n\tRtlUserThreadStart [0x00007FF89D6226B1+33]\n\n", "trace": "  File \"C:\\Users\\kimma\\github\\automation_qa_course\\env\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\kimma\\github\\automation_qa_course\\pages\\interactions_page.py\", line 89, in change_size_resizable\n    self.action_drag_and_drop_by_offset(self.element_is_visible(self.locators.RESIZABLE_HANDLE), random.randint(1,300), random.randint(1,300))\n  File \"C:\\Users\\kimma\\github\\automation_qa_course\\env\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\kimma\\github\\automation_qa_course\\pages\\base_page.py\", line 63, in action_drag_and_drop_by_offset\n    action.perform()\n  File \"C:\\Users\\kimma\\github\\automation_qa_course\\env\\Lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py\", line 94, in perform\n    self.w3c_actions.perform()\n  File \"C:\\Users\\kimma\\github\\automation_qa_course\\env\\Lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py\", line 96, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"C:\\Users\\kimma\\github\\automation_qa_course\\env\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\kimma\\github\\automation_qa_course\\env\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Find a visible element", "status": "passed", "parameters": [{"name": "locator", "value": "('css selector', \"div[id='resizable'] span[class='react-resizable-handle react-resizable-handle-se']\")"}, {"name": "timeout", "value": "10"}], "start": 1700318370974, "stop": 1700318370994}, {"name": "Drag and drop by offset", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: chrome=119.0.6045.160)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6975682B2+55298]\n\t(No symbol) [0x00007FF6974D5E02]\n\t(No symbol) [0x00007FF69739045D]\n\t(No symbol) [0x00007FF6974131B9]\n\t(No symbol) [0x00007FF6973F20AA]\n\t(No symbol) [0x00007FF69740AAA4]\n\t(No symbol) [0x00007FF6973F1E83]\n\t(No symbol) [0x00007FF6973C670A]\n\t(No symbol) [0x00007FF6973C7964]\n\tGetHandleVerifier [0x00007FF6978E0AAB+3694587]\n\tGetHandleVerifier [0x00007FF69793728E+4048862]\n\tGetHandleVerifier [0x00007FF69792F173+4015811]\n\tGetHandleVerifier [0x00007FF6976047D6+695590]\n\t(No symbol) [0x00007FF6974E0CE8]\n\t(No symbol) [0x00007FF6974DCF34]\n\t(No symbol) [0x00007FF6974DD062]\n\t(No symbol) [0x00007FF6974CD3A3]\n\tBaseThreadInitThunk [0x00007FF89B8B7344+20]\n\tRtlUserThreadStart [0x00007FF89D6226B1+33]\n\n", "trace": "  File \"C:\\Users\\kimma\\github\\automation_qa_course\\env\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\kimma\\github\\automation_qa_course\\pages\\base_page.py\", line 63, in action_drag_and_drop_by_offset\n    action.perform()\n  File \"C:\\Users\\kimma\\github\\automation_qa_course\\env\\Lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py\", line 94, in perform\n    self.w3c_actions.perform()\n  File \"C:\\Users\\kimma\\github\\automation_qa_course\\env\\Lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py\", line 96, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"C:\\Users\\kimma\\github\\automation_qa_course\\env\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\kimma\\github\\automation_qa_course\\env\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"6ae0a7a6c5502dba5d10cf09f5b82df6\", element=\"20A6C522123D698931FF8FC5EC1415F4_element_20\")>"}, {"name": "x_coords", "value": "123"}, {"name": "y_coords", "value": "224"}], "start": 1700318370994, "stop": 1700318371269}], "start": 1700318370974, "stop": 1700318371269}], "start": 1700318348716, "stop": 1700318371270, "uuid": "b6388c42-d9c8-4b4e-8c30-cac2d67d4602", "historyId": "e8d9e66141174c56221ec2ec7bd33dcf", "testCaseId": "e8d9e66141174c56221ec2ec7bd33dcf", "fullName": "tests.interactions_test.TestResizablePage#test_resizable", "labels": [{"name": "suite", "value": "Interactions"}, {"name": "feature", "value": "Resizable Page"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "subSuite", "value": "TestInteractions"}, {"name": "host", "value": "LAPTOP-JVHUTG0F"}, {"name": "thread", "value": "15604-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.interactions_test"}]}