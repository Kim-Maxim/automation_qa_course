{"name": "Check the page with frames", "status": "failed", "statusDetails": {"message": "AssertionError: The frame does not exist\nassert ['This is a s...0px', '100px'] == ['This is a s...0px', '100px']\n  At index 0 diff: 'This is a sample page' != 'This is a sample pag'\n  Full diff:\n  - ['This is a sample pag', '100px', '100px']\n  + ['This is a sample page', '100px', '100px']\n  ?                       +", "trace": "self = <alerts_frame_windows_test.TestAlertsFrameWindow.TestFramesPage object at 0x00000204AF0AAC30>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7bd22eef13e76e66919b4a85936fb23f\")>\n\n    @pytest.mark.smoke\n    @allure.title('Check the page with frames')\n    def test_frames(self, driver):\n        frame_page = FramesPage(driver, 'https://demoqa.com/frames')\n        frame_page.open()\n        result_frame1 = frame_page.check_frame('frame1')\n        result_frame2 = frame_page.check_frame('frame2')\n        assert result_frame1 == ['This is a sample page', '500px', '350px'], 'The frame does not exist'\n>       assert result_frame2 == ['This is a sample pag', '100px', '100px'], 'The frame does not exist'\nE       AssertionError: The frame does not exist\nE       assert ['This is a s...0px', '100px'] == ['This is a s...0px', '100px']\nE         At index 0 diff: 'This is a sample page' != 'This is a sample pag'\nE         Full diff:\nE         - ['This is a sample pag', '100px', '100px']\nE         + ['This is a sample page', '100px', '100px']\nE         ?                       +\n\ntests\\alerts_frame_windows_test.py:74: AssertionError"}, "steps": [{"name": "Open a browser", "status": "passed", "start": 1700317662957, "stop": 1700317695735}, {"name": "check frame", "status": "passed", "steps": [{"name": "Find a present element", "status": "passed", "parameters": [{"name": "locator", "value": "('css selector', \"iframe[id='frame1']\")"}, {"name": "timeout", "value": "10"}], "start": 1700317695735, "stop": 1700317695743}, {"name": "Find a present element", "status": "passed", "parameters": [{"name": "locator", "value": "('css selector', \"h1[id='sampleHeading']\")"}, {"name": "timeout", "value": "10"}], "start": 1700317695779, "stop": 1700317695788}], "parameters": [{"name": "frame_num", "value": "'frame1'"}], "start": 1700317695735, "stop": 1700317695800}, {"name": "check frame", "status": "passed", "steps": [{"name": "Find a present element", "status": "passed", "parameters": [{"name": "locator", "value": "('css selector', \"iframe[id='frame2']\")"}, {"name": "timeout", "value": "10"}], "start": 1700317695801, "stop": 1700317695807}, {"name": "Find a present element", "status": "passed", "parameters": [{"name": "locator", "value": "('css selector', \"h1[id='sampleHeading']\")"}, {"name": "timeout", "value": "10"}], "start": 1700317695832, "stop": 1700317695838}], "parameters": [{"name": "frame_num", "value": "'frame2'"}], "start": 1700317695801, "stop": 1700317695845}], "start": 1700317662957, "stop": 1700317695845, "uuid": "682cdafe-47e9-4ac2-8676-1934006530ee", "historyId": "3640ac7c03e1f3fd1e6857958310dd50", "testCaseId": "3640ac7c03e1f3fd1e6857958310dd50", "fullName": "tests.alerts_frame_windows_test.TestFramesPage#test_frames", "labels": [{"name": "suite", "value": "Alerts, Frame & Windows"}, {"name": "feature", "value": "Frame Page"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "subSuite", "value": "TestAlertsFrameWindow"}, {"name": "host", "value": "LAPTOP-JVHUTG0F"}, {"name": "thread", "value": "15604-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.alerts_frame_windows_test"}]}